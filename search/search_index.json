{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"GlyphIt","text":"<p>GlyphIt is a Rust-based CLI tool designed to standardize and simplify the use of emojis in Git commit messages.</p>"},{"location":"#features","title":"\u2728 Features","text":"<ul> <li>\ud83d\ude80 Automatic emoji mapping for commit types (<code>add</code>, <code>fix</code>, <code>docs</code>, <code>chore</code>, etc.)</li> <li>\ud83e\udde9 Lightweight and fast \u2014 built with Rust</li> <li>\u2699\ufe0f Easy integration into Git workflows</li> <li>\ud83e\udde0 Extensible \u2014 developers can add new emoji rules or commit templates</li> <li>\ud83d\uddc2\ufe0f CLI-based \u2014 no GUI, just straightforward commands</li> </ul>"},{"location":"#example","title":"\ud83d\udce6 Example","text":"<pre><code>glyphit commit\n# \u2192 Commit message becomes:\n# \u2728 add: login validation\n</code></pre>"},{"location":"#requirements","title":"\ud83e\uddf0 Requirements","text":"<ul> <li>Rust (1.70+ recommended)</li> <li>Git (2.0+)</li> <li>Works on Linux, macOS, and Windows</li> </ul>"},{"location":"#documentation","title":"\ud83d\uddfa\ufe0f Documentation","text":"<ul> <li>Installation</li> <li>Usage</li> <li>Commands</li> <li>Architecture</li> <li>Development</li> <li>Changelog</li> </ul>"},{"location":"architecture/","title":"\ud83e\udde9 Architecture","text":"<p>GlyphIt\u2019s architecture is modular and designed around command execution and repository handling.</p>"},{"location":"architecture/#project-structure","title":"\ud83d\uddc2\ufe0f Project Structure","text":"<pre><code>src/\n\u251c\u2500\u2500 main.rs              # Entry point\n\u251c\u2500\u2500 functions/           # CLI command implementations\n\u2502   \u251c\u2500\u2500 add.rs\n\u2502   \u251c\u2500\u2500 commit.rs\n\u2502   \u251c\u2500\u2500 push.rs\n\u2502   \u2514\u2500\u2500 mod.rs\n\u2514\u2500\u2500 types/               # Core types and data structures\n    \u251c\u2500\u2500 commands.rs\n    \u251c\u2500\u2500 repository.rs\n    \u2514\u2500\u2500 mod.rs\n</code></pre>"},{"location":"architecture/#core-modules","title":"\u2699\ufe0f Core Modules","text":""},{"location":"architecture/#mainrs","title":"<code>main.rs</code>","text":"<ul> <li>Parses CLI arguments.</li> <li>Delegates execution to command functions in <code>functions/mod.rs</code>.</li> </ul>"},{"location":"architecture/#functions","title":"<code>functions/</code>","text":"<p>Contains the implementation of the main Git commands: - <code>add.rs</code> \u2192 handles staging files. - <code>commit.rs</code> \u2192 creates emoji-standardized commits. - <code>push.rs</code> \u2192 handles pushing to remote.</p>"},{"location":"architecture/#types","title":"<code>types/</code>","text":"<p>Defines data models used across the codebase: - <code>commands.rs</code> \u2192 defines enums/structs for command types. - <code>repository.rs</code> \u2192 manages local Git repo metadata.</p>"},{"location":"architecture/#design-philosophy","title":"\ud83e\uddf1 Design Philosophy","text":"<ul> <li>Keep logic modular (per command file)</li> <li>Focus on simplicity, not abstraction</li> <li>Avoid unnecessary dependencies</li> </ul>"},{"location":"changelog/","title":"\ud83e\udeb5 Changelog","text":"<p>This file summarizes the main updates of the project. For the full history, see Changes.md.</p>"},{"location":"changelog/#initial-release","title":"\ud83e\uddf1 Initial Release","text":"<ul> <li>Base CLI created (<code>add</code>, <code>commit</code>, <code>push</code>)</li> <li>Emoji mapping system introduced</li> <li>MkDocs documentation scaffolded</li> <li>GitHub CI workflows added (Rust + Release)</li> </ul>"},{"location":"commands/","title":"\ud83d\udd27 Commands","text":"<p>GlyphIt provides a small but powerful set of subcommands. All commands are implemented in the <code>src/functions/</code> module.</p>"},{"location":"commands/#glyphit-add","title":"<code>glyphit add</code>","text":"<p>Stages files for commit with emoji tagging.</p> <pre><code>glyphit add [files...]\n</code></pre> <p>Example:</p> <pre><code>glyphit add src/main.rs\n</code></pre> <p>Internally, it calls:</p> <pre><code>git add &lt;files&gt;\n</code></pre> <p>and prepares commit metadata with the correct emoji.</p>"},{"location":"commands/#glyphit-commit","title":"<code>glyphit commit</code>","text":"<p>Creates a Git commit with the standardized emoji prefix.</p> <pre><code>glyphit commit\n</code></pre> <p>Example:</p> <pre><code>glyphit commit\n# Then it will start an interactive prompt\n# =&gt; \ud83d\udc1b fix: memory leak\n</code></pre> <p>GlyphIt automatically determines the emoji by scanning the message or type keyword.</p>"},{"location":"commands/#glyphit-push","title":"<code>glyphit push</code>","text":"<p>Pushes your changes to the current branch.</p> <pre><code>glyphit push\n</code></pre> <p>Equivalent to:</p> <pre><code>git push origin HEAD\n</code></pre>"},{"location":"development/","title":"\ud83e\uddea Development Guide","text":"<p>This document explains how to build, test, and extend GlyphIt.</p>"},{"location":"development/#build","title":"\ud83c\udfd7\ufe0f Build","text":"<pre><code>cargo build\n</code></pre> <p>For a release build:</p> <pre><code>cargo build --release\n</code></pre>"},{"location":"development/#test","title":"\ud83e\uddea Test","text":"<p>Run all tests with:</p> <pre><code>cargo test\n</code></pre> <p>You can also test individual modules:</p> <pre><code>cargo test functions::commit\n</code></pre>"},{"location":"development/#contributing","title":"\ud83e\uddf0 Contributing","text":"<ol> <li>Fork the repository</li> <li>Create a new feature branch</li> <li>Implement your changes</li> <li>Submit a PR with detailed description</li> </ol>"},{"location":"installation/","title":"\ud83e\udde9 Installation","text":"<p>GlyphIt can be installed in multiple ways depending on your setup and preferences.</p>"},{"location":"installation/#from-source","title":"\ud83c\udfd7\ufe0f From Source","text":"<p>You can also clone the repository and build manually:</p> <pre><code>git clone https://github.com/NickGhignatti/glyphit.git\ncd glyphit\ncargo build --release\n</code></pre> <p>The binary will be available at:</p> <pre><code>target/release/glyphit\n</code></pre>"},{"location":"installation/#from-release","title":"\ud83e\udde0 From release","text":"<p>The download is available in the release section of the github page</p>"},{"location":"usage/","title":"\ud83d\udcbb Usage","text":"<p>GlyphIt provides several commands to help you standardize emoji usage in your Git workflow.</p>"},{"location":"usage/#quick-start","title":"\ud83d\ude80 Quick Start","text":"<p>Inside a Git repository, use:</p> <pre><code>glyphit commit\n</code></pre> <p>Then it will start an interactive builder for your commit message</p>"},{"location":"usage/#typical-workflow","title":"\ud83e\udded Typical Workflow","text":"<ol> <li> <p>Stage your changes:    <code>bash    glyphit add &lt;filename&gt; # equivalent of git add &lt;filename&gt;</code></p> </li> <li> <p>Commit using GlyphIt:    <code>bash    glyphit commit</code></p> </li> <li> <p>Push your changes:    <code>bash    glyphit push</code></p> </li> </ol> <p>Each command integrates seamlessly with Git and ensures consistent emoji usage.</p>"}]}